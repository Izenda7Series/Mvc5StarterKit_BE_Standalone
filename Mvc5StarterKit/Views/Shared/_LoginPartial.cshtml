@using Microsoft.AspNet.Identity
@using System.Web.Mvc;
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                @*If manage account can be handled here, you can uncomment below line and customize it*@
                @*@Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })*@

                <a>Hello, @User.Identity.GetUserName()!</a>
            </li>

            @*Further works: Need to set up a condition for allowed user(s) to manager create user/ tenant
                For now, only for system admin. Please update this condition. Check User Information whether System Admin or not*@
            @if (User.Identity.GetUserName().Equals("IzendaAdmin@system.com"))
            {
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        Create User / Tenant
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Create User", "CreateUser", "Account")</li>
                        <li>@Html.ActionLink("Create Tenant", "CreateTenant", "Account")</li>
                    </ul>
                </li>
            }

            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @*<li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
